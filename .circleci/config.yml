version: 2.1

commands:
  build_and_test:
    description: "Build and test"
    steps:
      - run:
          name: Install System Libs
          command: |
            sudo apt -qq update
            sudo apt install -y -qq bcrypt

      - checkout

      - restore_cache:
          key: dependency-cache-yarn-{{ checksum "yarn.lock" }}

      - restore_cache:
          key: dependency-cache-npm-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: |
            node --version
            yarn install
            cp .env.example .env
            cp .env.example .env.test

      - save_cache:
          key: dependency-cache-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: dependency-cache-npm-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules

      - run:
          name: Run Linter
          command: |
            ./tools/scripts/eslint-pr.sh

      - run:
          name: Run Tests
          command: |
            yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/jest/js-test-results.xml"

      - run:
          name: Build storybooks
          command: |
            yarn build-storybook

      - store_test_results:
          path: reports

      - store_artifacts:
          path: reports

      - store_artifacts:
          path: storybook-static

  deploy_to_server:
    description: "Deploy"
    steps:
      - checkout

      - run:
          name: Copy Env File
          command: |
            cp .env.example .env

      - run:
          name: Fix host authenticity for wiki.onramplab.com
          command: |
            ssh-keyscan wiki.onramplab.com >> ~/.ssh/known_hosts

      - deploy:
          command: |
            gem install bundler -v 1.17.3
            bundle check || bundle install

            echo "current branch is ${CIRCLE_BRANCH}"
            echo "current tag is ${CIRCLE_TAG}"

            if [[ -n "${CIRCLE_TAG}" ]]; then
              USERNAME=${CIRCLE_USERNAME} VIA_BASTION=1 CI_BRANCH="${CIRCLE_TAG}" cap production deploy --trace
            elif [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              USERNAME=${CIRCLE_USERNAME} VIA_BASTION=1 CI_BRANCH=master cap staging deploy --trace
            fi

jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.15.0

    steps:
      - build_and_test

  build_prod:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.15.0

    steps:
      - build_and_test

  deploy_staging:
    docker:
      - image: circleci/ruby:2.4.2-jessie-node

    steps:
      - deploy_to_server

  deploy_prod:
    docker:
      - image: circleci/ruby:2.4.2-jessie-node

    steps:
      - deploy_to_server


workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      # - deploy_staging:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
      - build_prod:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      # - deploy_prod:
      #     requires:
      #       - build_prod
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
